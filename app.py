from flask import Flask, request, jsonify
from flask_cors import CORS
import json
import os

app = Flask(__name__)
CORS(app)
algorithms=[
    [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000, 1331, 1728, 2197, 2744, 3375, 4096, 4913, 5832, 6859, 8000, 9261, 10648, 12167, 13824, 15625, 17576, 19683, 21952, 24389, 27000, 29791, 32768, 35937, 39304, 42875, 46656, 50653, 54872, 59319, 64000, 68921, 74088, 79507],
    [1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401, 2500],
    [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155],
    [1,2, 1,3,2,3, 1,4,3,5,2,5,3,4, 1,5,4,7,3,8,5,7,2,7,5,8,3,7,4,5, 1,6,5,9, 4, 11,7, 10, 3, 11,8, 13, 5, 12,7,9,2,9,7, 12, 5, 13, 8, 11, 3, 10, 7, 11, 4, 9, 5, 6, 1, 7 ],
    [1,2, 1,3,2,4,4,5,7,7, 11, 11, 16, 18,23,29,34,45,52,68,81, 102, 126, 154, 194, 235, 296, 361, 450, 555, 685, 851, 1046, 1301, 1601, 1986, 2452, 3032, 3753, 4633],
    [1,2, 1,6, 12,46,92,341, 1787,9233],
    [1, 2, 2, 3, 4, 5, 7, 9, 12, 16, 21, 28, 37, 49, 65, 86, 114, 151, 200, 265, 351, 465,616, 816, 1081, 1432, 1897, 2513, 3329, 4410, 5842, 7739, 10252, 13581, 17991, 23833 ],
    [1, 2, 2, 3, 4, 6, 9, 14, 22, 35, 56, 90, 145, 234, 378, 611, 988, 1598, 2585, 4182, 6766, 10947, 17712, 28658, 46369, 75026, 121394, 196419, 317812, 514230, 832041],
    [1,2,2,4,6, 11, 18,37,66, 135,265 ],
    [1,2, 2, 4, 8, 4, 16, 12, 48, 80, 136, 420, 1240, 2872, 7652, 18104, 50184],
    [1, 2, 2, 4, 10, 16, 28, 48, 76, 110, 144, 182, 222, 264, 310, 356, 408, 468, 536, 610,684,762,842,924,1010, 1096, 1188, 1288, 1396, 1510, 1624, 1742, 1862 ],
    [1,2,2,4,12,22,58, 158,448, 1342,4199, 13384 ],
    [1, 2, 2, 5, 5, 12, 12, 27, 28, 64, 67, 147, 158, 348, 373, 799, 879, 1886,2069, 4335,4864],
    [1,2,2,6,14, 34, 82, 198, 478, 1154, 2786, 6726, 16238, 39202, 94642, 228486,551614, 1331714, 3215042, 7761798, 18738638, 45239074, 109216786, 263672646],
    [1,2,3, 2, 5, 5, 7, 10, 12, 17, 22, 29, 39, 51, 68, 90, 119,158, 209, 277, 367, 486,644,853, 1130, 1497, 1983,2627,3480,4610,6107,8090, 10717, 14197, 18807,24914 ],
    [1, 2, 3, 4, 6, 7, 11, 18, 34, 38, 43, 55, 64, 76, 94, 103, 143, 206, 216, 306, 324, 391,458, 470, 827],
    [1,2,3, 4, 6, 9,13,19, 28, 41, 60, 88, 129, 189, 277, 406, 595, 872, 1278, 1873,2745,4023,5896,8641, 12664, 18560, 27201, 39865, 58425, 85626, 125491, 1839],
    [1,2,3,5,6,8, 12, 14, 15, 17,20,21,24,27,33,38,41,50,54,57,59,62,66,69,71, 75, 77, 78, 80, 89, 90, 99, 101, 105, 110, 111, 117, 119, 131, 138, 141, 143, 147, 150],
    [1,2,3,5,7,8, 10, 12, 13, 18,20,27,28,33,37,42,45,47,55,58,60,62,63,65,67,73,75,78,80,85,88,90,92, 102, 103, 105, 112, 115, 118, 120, 125, 128, 130, 132 ],
    [1,2,3,5,7,10,11,13,14,18,21, 22, 31, 42, 67, 70, 71, 73, 251, 370, 375, 389,407],
    [1,2,3,5,7, 10, 12, 17, 18,23,25,30,32,33,38,40,45,47,52,58,70,72,77,87,95, 100, 103, 107, 110, 135, 137, 138, 143, 147, 170, 172, 175, 177, 182, 192,205,213],
    [1,2,3,5,7, 10, 14,20,29,43,65, 100, 156,246,391,625, 1003, 1614,2602,4200, 6785, 10967, 17733, 28680, 46392, 75050, 121419, 196445, 317839, 514258],
    [1,2,3,5,7,11,15, 22, 30, 42, 56, 77, 101, 135, 176, 231, 297, 385, 490, 627, 792,1002, 1255, 1575, 1958, 2436, 3010, 3718, 4565, 5604, 6842, 8349, 10143, 12310, 14883],
    [1,2,3,5,7,11,17, 25, 38, 57, 86, 129, 194, 291, 437, 656, 985, 1477, 2216, 3325,4987, 7481, 11222, 16834, 25251, 37876, 56815, 85222, 127834, 191751, 287626],
    [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765,10946, 17711,28657,46368,75025, 121393, 196418,317811,514229,832040, 1346269 ],
    [1, 2, 3, 5, 9, 17, 33, 65, 129, 257, 513, 1025, 2049, 4097, 8193, 16385, 32769,65537,131073,262145, 524289, 1048577, 2097153, 4194305, 8388609, 16777217 ],
    [1,2,3,5, 10, 11,26,32,39,92, 116, 134, 170,224],
    [1,2,3,5,16, 231, 53105, 2820087664, 7952894429824835871,63248529811938901240357985099443351745 ],
    [1, 2, 3, 6, 5, 11, 14, 22, 30, 47, 66, 99, 143, 212, 308, 454, 663, 974, 1425, 2091,3062, 4490, 6578, 9643, 14130, 20711, 30351, 44484, 65192, 95546, 140027,205222 ],
    [1, 2, 3, 6, 7, 11, 14, 17, 33, 42, 43, 63, 65, 67, 81, 134, 162, 206, 211, 366],
    [1,2,3, 6, 8, 10, 22, 35, 42, 43, 46, 56, 91, 102, 106, 142, 190, 208, 266, 330, 360,382,462,503,815 ],
    [1, 2, 3, 6, 10, 17, 28, 46, 75, 122, 198, 321, 520, 842, 1363, 2206, 3570, 5777,9348,15126,24475, 39602, 64078, 103681, 167760, 271442, 439203, 710646,1149850],
    [1, 2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310,48620,92378,184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600 ],
    [1,2,3,6,11, 20, 37, 68, 125, 230, 423, 778, 1431, 2632, 4841, 8904, 16377,30122, 55403, 101902, 187427, 344732, 634061, 1166220,2145013, 3945294,7256527],
    [1,2,3,6,30,75,81],
    [1, 2, 3, 7, 8, 10, 16, 18, 19, 40, 48, 55, 90, 96, 98, 190, 398, 456, 502],
    [1,2,3,7, 10, 13, 18,27,37,51,74, 157,271,458,530,891],
    [1, 2, 3, 7, 10, 13, 25, 26, 46, 60, 87, 90, 95, 145, 160, 195, 216, 308, 415 ],
    [1,2,3,7, 18,41, 123,367],
    [1, 2, 3, 8, 10, 12, 14, 17, 23, 24, 27, 28, 37, 40, 41, 44, 45, 53, 59, 66, 70, 71, 77,80,82,87,90,97,99, 102, 105, 110, 114, 119, 121, 124, 127, 133, 136, 138, 139, 144],
    [1, 2, 3, 11, 22, 26, 101, 111, 121, 202, 212, 264, 307, 836, 1001, 1111, 2002, 2285,2636, 10001, 10101, 10201, 11011, 11111, 11211,20002,20102,22865,24846,30693],
    [1,2,3,11, 69, 701, 10584, 222965, 6253604, 225352709, 10147125509,558317255704, 36859086001973, 2875567025409598, 261713458398275391],
    [1, 2, 4, 5, 8, 12, 19, 30, 48, 77, 124, 200, 323, 522, 844, 1365, 2208, 3572, 5779,9350, 15128, 24477, 39604, 64080, 103683, 167762, 271444, 439205, 710648, 1149852],
    [1,2,4,5, 10, 14, 17,31,41,73,80,82, 116, 125, 145, 157, 172,202,224,266,289, 293, 463 ],
    [1, 2, 4, 6, 8, 12, 16, 24, 32, 36, 48, 64, 72, 96, 120, 128, 144, 192, 216, 240, 256,288, 384, 432, 480, 512, 576, 720, 768, 864, 960, 1024, 1152, 1296, 1440, 1536, 1728 ],
    [1,2,4,6,8, 14,26],
    [1,2,4,6, 16,20,24,28,34,46,48,54,56,74,80,82,88,90, 106, 118, 132, 140,142, 154, 160, 164, 174, 180, 194, 198, 204, 210, 220, 228, 238, 242, 248, 254, 266, 272],
    [1,2,4,6,16, 20, 36, 54, 60, 96, 124, 150, 252, 356, 460, 612, 654, 664, 698, 702,972 ],
    [1,2,4,7, 11, 16,22,29,37,46,56,67,79,92, 106, 121, 137, 154, 172, 191,211,232, 254, 277, 301, 326, 352, 379, 407, 436, 466, 497, 529, 562, 596, 631, 667, 704, 742],
    [1,2,4,7,13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513,35890,66012,121415, 223317, 410744, 755476, 1389537, 2555757, 4700770, 8646064],
    [1, 2, 4, 8, 10, 12, 14, 18, 32, 48, 54, 72, 148, 184, 248, 270, 274, 420 ],
    [1,2,4,10, 26, 76, 232, 764, 2620, 9496, 35696, 140152, 568504, 2390480,10349536, 46206736, 211799312, 997313824, 4809701440, 23758664096],
    [1,2,4,16, 80, 520, 3640, 29120],
    [1,2,5,12, 29, 70, 169, 408, 985, 2378, 5741, 13860, 33461, 80782, 195025,470832, 1136689, 2744210, 6625109, 15994428, 38613965, 93222358, 225058681],
    [1,2,5, 13,38, 116,382, 1310,4748, 17848,70076,284252, 1195240,5174768,23103368, 105899656, 498656912, 2404850720, 11879332048, 59976346448],
    [1,2,5,17, 73, 388, 2461, 18155, 152531, 1436714, 14986879, 171453343,2134070335, 28708008128, 415017867707, 6416208498137, 105630583492969 ],
    [1, 2, 5, 20, 115, 790, 6217, 55160, 545135, 5938490, 70686805, 912660508,12702694075,189579135710, 3019908731105],
    [1,2,5,21,106, 643, 4547, 36696, 332769, 3349507],
    [1,2,7, 26, 97, 362, 1351, 5042, 18817, 70226, 262087, 978122, 3650401,13623482, 50843527, 189750626, 708158977, 2642885282, 9863382151, 36810643322],
    [1,2,7, 30, 157, 972, 6961, 56660, 516901, 5225670, 57999271, 701216922,9173819257, 129134686520, 1946194117057, 31268240559432 ],
    [1,2,7,32,181, 1214, 9403, 82508, 808393, 8743994, 103459471, 1328953592,18414450877,273749755382, 4345634192131, 73362643649444 ],
    [1, 2, 8, 50, 418, 4348, 54016, 779804, 12824540, 236648024, 4841363104,108748223128, 2660609220952, 70422722065040, 2005010410792832 ],
    [1,2,9,28, 101,342, 1189,4088, 14121,48682, 167969,579348, 1998541,6893822,23780349, 82029808, 282961361, 976071762,3366950329, 11614259468],
    [1, 2, 9, 38, 161, 682, 2889, 12238, 51841, 219602, 930249, 3940598, 16692641,70711162, 299537289, 1268860318, 5374978561, 22768774562, 96450076809 ],
    [1,2,12, 70, 408, 2378, 13860, 80782, 470832, 2744210, 15994428, 93222358,543339720,3166815962, 18457556052, 107578520350, 627013566048],
    [1,2,13, 44, 205, 806, 3457, 14168, 59449, 246410, 1027861, 4273412, 17797573,74055854, 308289865, 1283082416, 5340773617, 22229288978, 92525540509],
    [1,2,20, 198, 1960, 19402, 192060, 1901198, 18819920, 186298002, 1844160100,18255302998, 180708869880, 1788833395802, 17707625088140],
    [1, 2, 26, 50, 54, 126, 134, 246, 354, 362, 950 ],
    [1, 3, 3, 5, 7, 11, 17, 27, 43, 69, 111, 179, 289, 467, 755, 1221, 1975, 3195, 5169,8363,13531,21893, 35423, 57315, 92737, 150051, 242787, 392837, 635623, 1028459],
    [1, 3, 4, 5, 8, 10, 7, 9, 18, 24, 14, 30, 19, 20, 44, 16, 27, 58, 15, 68, 70, 37, 78, 84,11,49,50, 104,36,27, 19, 128, 130,69,46,37,50,79, 164, 168,87, 178,90, 190,97,99 ],
    [1,3, 4, 7, 11, 18,29,47,76, 123, 199,322,521,843, 1364,2207,3571,5778,9349, 15127,24476,39603,64079, 103682, 167761,271443,439204,710647, 1149851],
    [1,3,4,11,15,41, 56, 153, 209, 571, 780, 2131, 2911, 7953, 10864, 29681, 40545,110771,151316, 413403, 564719, 1542841, 2107560, 5757961, 78655],
    [1, 3, 5, 6, 9, 13, 20, 31, 49, 78, 125, 201, 324, 523, 845, 1366, 2209, 3573, 5780,9351,15129,24478, 39605, 64081, 103684, 167763, 271445, 439206, 710649, 1149853 ],
    [1,3,5,7,11, 13, 17, 19,23,31,43,61,79],
    [1,3,5,9, 11, 15, 19,25,29,35,39,45,49,51,59,61,65,69,71,79,85,95, 101,121, 131, 139, 141, 145,159, 165, 169, 171, 175, 181, 195, 199,201,205,209,219,221 ],
    [1,3,5,9, 15,25,41,67, 109, 177,287,465,753, 1219, 1973,3193,5167,8361,13529, 21891,35421, 57313, 92735, 150049, 242785, 392835, 635621, 1028457],
    [1, 3, 5, 9, 17, 31, 57, 105, 193, 355, 653, 1201, 2209, 4063, 7473, 13745, 25281,46499,85525, 157305, 289329, 532159, 978793, 1800281, 3311233, 6090307, 11201821 ],
    [1,3,5,11,21, 43, 85, 171, 341, 683, 1365, 2731, 5461, 10923, 21845, 43691,87381,174763,349525, 699051, 1398101, 2796203, 5592405,11184811, 22369621],
    [1,3,5,21,41,49,89, 133, 141, 165, 189,293,305,395,651,665,771,801,923,953],
    [1,3,6, 10, 15,21,28,36,45,55,66,78,91, 105, 120,136, 153, 171, 190,210,231, 253, 276, 300, 325, 351, 378, 406, 435, 465, 496, 528, 561, 595, 630, 666, 703, 741 ],
    [1,3,6, 12,24,48,90, 174,336,648, 1218,2328,4416,8388, 15780,29892,56268, 106200, 199350, 375504, 704304, 1323996, 2479692, 4654464, 8710212],
    [1, 3, 6, 18, 48, 156, 492, 1740, 6168, 23568, 91416, 374232, 1562640, 6801888,30241488, 139071696, 653176992, 3156467520, 15566830368,78696180768],
    [1,3,7,9,13,15, 21, 25, 31, 33, 37, 43, 49, 51, 63, 67, 69, 73, 75, 79, 87, 93, 99,105, 111, 115, 127, 129, 133, 135, 141, 151, 159, 163, 169, 171, 189, 193, 195,201,205],
    [1, 3, 7, 13, 15, 25, 39, 55, 75, 85, 127, 1947],
    [1,3,7, 13,21,31,43,57,73,91, 111, 133, 157, 183,211,241,273,307,343,381,421,463,507,553, 601, 651, 703, 757, 813, 871, 931, 993, 1057, 1123, 1191, 126],
    [1, 3, 7, 13, 31, 43, 73, 157, 211, 241, 307, 421, 463, 601, 757, 1123, 1483, 1723,2551,2971,3307, 3541, 3907, 4423, 4831,5113, 5701, 6007, 6163, 6481, 8011, 8191],
    [1, 3, 7, 17, 41, 99, 239, 577, 1393, 3363, 8119,19601, 47321, 114243, 275807,665857, 1607521, 3880899, 9369319, 22619537, 54608393, 131836323, 318281039 ],
    [1,3,7, 23, 89, 139, 199, 113, 1831, 523, 887, 1129, 1669, 2477, 2971, 4297, 5591,1327, 9551, 30593, 19333, 16141,15683, 81463, 28229, 31907, 19609, 35617, 82073 ],
    [1,3,7,23,287,291,795],
    [1,3,8,33,164, 985, 6894, 55153, 496376, 4963761, 54601370, 655216441,8517813732,119249392249, 1788740883734, 28619854139745],
    [1, 3, 9, 25, 75, 231, 763, 2619, 9495, 35695, 140151, 568503, 2390479, 10349535,46206735, 211799311, 997313823, 4809701439, 23758664095, 119952692895],
    [1,3,9,29,35,42,48, 113,120, 126, 152, 185,204,224,237,243,276,302,308,321, 341, 386, 399, 419, 432, 477, 503, 510, 516, 542, 549, 588, 633, 659, 666, 705, 731],
    [1,3, 10,43,225, 1393,9976,81201,740785,7489051,83120346, 1004933203,13147251985,185066460993, 2789144166880, 44811373131073],
    [1,3, 11,41, 153,571,2131,7953,29681, 110771,413403, 1542841,5757961,21489003,80198051, 299303201, 1117014753, 4168755811, 15558008491],
    [1,3, 11,53,309,2119,16687,148329, 1468457, 16019531, 190899411,2467007773,34361893981, 513137616783, 817813076747],
    [1,3,13,71, 465, 3539, 30637, 296967, 3184129, 37401155, 477471021,6581134823, 97388068753, 1539794649171, 25902759280525, 461904032857319],
    [1, 3, 15, 27, 51, 147, 243, 267, 347, 471],
    [1,3,16,95,672,5397,48704 ],
    [1,3, 60, 1197, 23880, 476403, 9504180, 189607197, 3782639760, 75463188003,1505481120300, 30034159217997, 599177703239640, 11953519905574803],
    [1, 4, 7, 10, 13, 19, 28, 31, 34, 40, 43, 52, 70, 73, 76, 82, 85, 91, 97, 103, 112, 115,124, 127, 136, 145, 148, 157, 166, 175, 187, 190, 199, 202, 223, 241, 244, 259, 265, 271],
    [1, 4, 10, 20, 35, 56, 84, 120, 165, 220, 286, 364, 455, 560, 680, 816, 969, 1140,1330, 1540, 1771, 2024, 2300, 2600, 2925, 3276, 3654, 4060, 4495, 4960, 5456, 5984],
    [ 1, 4, 10, 30, 100, 354, 1300, 4890, 18700, 72354, 282340, 1108650, 4373500,17312754,68711380, 273234810, 1088123500, 4338079554, 17309140420],
    [1, 4, 11, 23, 79, 148, 533, 977, 3553, 6484, 23627, 43079, 157039, 286276],
    [1, 4, 11, 26, 57, 120, 247, 502, 1013, 2036, 4083, 8178, 16369, 32752, 65519,131054,262125, 524268, 1048555, 2097130, 4194281, 8388584, 16777191, 33554406],
    [1, 4, 11, 29, 54, 99, 163, 239, 344, 486, 648, 847, 1069, 1355, 1680, 2046, 2446, 2911, 3443, 4022, 4662, 5395, 6145, 6998, 7913, 8913, 10006, 11194, 12437, 13751],
    [1,4,15, 56, 209, 780, 2911, 10864, 40545, 151316, 564719, 2107560, 7865521,29354524,109552575, 408855776, 1525870529, 5694626340, 21252634831],
    [1,4,16, 25, 37, 46, 58, 88, 109, 130, 142, 151, 184, 193, 205, 247, 268, 298, 310,319, 331, 340, 382, 394, 403, 415, 424, 457, 478, 487, 541, 550, 604, 613, 688, 697, 709 ],
    [1,4, 20, 56, 120, 220, 364, 560, 816, 1140, 1540, 2024, 2600, 3276, 4060, 4960,5984, 7140, 8436, 9880, 11480, 13244, 15180, 17296, 19600, 22100, 24804, 27720],
    [1,4,21, 134, 1001,8544,81901,870274, 10146321, 128718044, 1764651461,25992300894, 409295679481, 6860638482424, 121951698034461],
    [1,4,31, 244, 1921, 15124, 119071, 937444, 7380481, 58106404, 457470751,3601659604,28355806081, 223244789044, 1757602506271, 13837575261124],
    [1, 5, 15, 35, 70, 126, 210, 330, 495, 715, 1001, 1365, 1820, 2380, 3060, 3876,4845, 5985, 7315, 8855, 10626, 12650, 14950, 17550, 20475, 23751, 27405, 31465],
    [1, 5, 18, 42, 75, 117, 168, 228, 297, 375, 462, 558, 663, 777, 900, 1032, 1173,1323, 1482, 1650, 1827, 2013, 2208, 2412, 2625, 2847, 3078, 3318, 3567],
    [1,5, 18,58, 179,543, 1636,4916, 14757,44281, 132854,398574, 1195735,3587219],
    [1,5,19,71, 265, 989, 3691, 13775, 51409, 191861, 716035, 2672279, 9973081,37220045, 138907099, 518408351, 1934726305, 7220496869,26947261171],
    [1,5, 31, 227, 1909, 18089, 190435, 2203319, 27772873, 378673901, 5551390471,87057596075, 1453986832381, 25762467303377, 482626240281739 ],
    [1, 5, 36, 329, 3655, 47844, 721315, 12310199, 234615096, 4939227215,113836841041, 2850860253240, 77087063678521, 2238375706930349],
    [1, 5, 49, 485, 4801, 47525, 470449, 4656965, 46099201, 456335045, 4517251249,44716177445, 442644523201, 4381729054565, 43374646022449],
    [1, 6, 6, 4, 6, 12, 28, 72, 198, 572, 1716, 5304, 16796, 54264, 178296, 594320,2005830, 6843420 ],
    [1,6, 24, 90, 336, 1254, 4680, 17466, 65184, 243270, 907896, 3388314, 12645360,4719312617612,7144, 657315450, 2453134656, 9155223174, 34167758040],
    [1,6, 30, 84, 90, 132, 5460, 360, 1530, 7980, 13860, 8280, 81900, 1512, 3480,114576],
    [1,6, 30, 180, 840, 5460, 30996, 209160, 1290960, 9753480, 69618120,571627056,4443697440, 40027718640, 346953934320, 3369416698080 ],
    [1, 6, 35, 204, 1189, 6930, 40391, 235416, 1372105, 7997214, 46611179,271669860, 1583407981, 9228778026, 53789260175, 313506783024, 1827251437969],
    [1,7, 11,26,45,83, 125, 140, 182, 197,201,216,239,258,311,330,353,444,467, 482, 486, 524, 539, 558, 600, 752, 771, 843, 881, 885, 923, 980, 999, 1071, 1113 ],
    [1,7, 17,19,23,29,47,59,61,97, 109, 113, 131, 149, 167, 179, 181, 193,223,229, 233, 257, 263, 269, 313, 337, 367, 379, 383, 389, 419, 433, 461, 487, 491, 499, 503],
    [1,7, 17,23,41,47,71,79,97, 103, 137, 167, 191, 193, 199,239,263,271,311, 313, 359, 367, 383, 401, 409, 449, 463, 479, 487, 503, 521, 569, 599, 607, 647, 719, 743],
    [1, 7, 17, 31, 43, 79, 89, 113, 127, 137, 199, 223, 233, 257, 281, 283, 331, 353, 401, 449, 463, 487, 521, 569, 571, 593, 607, 617, 631,641, 691, 739, 751, 809, 811, 823, 857 ],
    [1,7,18, 34, 55, 81, 112, 148, 189, 235, 286, 342, 403, 469, 540, 616, 697, 783,874, 970, 1071, 1177, 1288, 1404, 1525, 1651, 1782, 1918, 2059, 2205, 2356, 2512, 2673],
    [1,7, 28, 84, 210, 462, 924, 1716, 3003, 5005, 8008, 12376, 18564, 27132, 38760,54264, 74613, 100947, 134596, 177100, 230230, 296010, 376740, 475020, 593775],
    [1,7,41, 239, 1393, 8119, 47321, 275807, 1607521, 9369319, 54608393,318281039,1855077841, 10812186007, 63018038201, 367296043199, 2140758220993],
    [1,8,36, 120,330,792, 1716,3432,6435, 11440, 19448,31824,50388,77520,116280,170544, 245157, 346104, 480700, 657800, 888030,1184040, 1560780,2035800],
    [1,8,63,496, 3905, 30744, 242047, 1905632, 15003009, 118118440, 929944511,7321437648, 57641556673, 453811015736, 3572846569215,28128961537984],
    [1,8, 105, 1456, 20273, 282360, 3932761, 54776288, 762935265, 10626317416,148005508553,2061450802320, 28712305723921, 399910829332568 ],
    [1,8,127,2024, 32257, 514088, 8193151, 130576328, 2081028097, 33165873224,528572943487, 8424001222568, 134255446617601, 2139663144659048],
    [1,9, 45, 165, 495, 1287, 3003, 6435, 12870, 24310, 43758, 75582, 125970,203490,319770, 490314, 735471, 1081575, 1562275, 2220075, 3108105, 4292145 ],
    [1, 10, 55, 220, 715, 2002, 5005, 11440, 24310, 48620, 92378, 167960, 293930,497420, 817190,1307504, 2042975, 3124550, 4686825,6906900, 10015005,14307150],
    [1, 11, 66, 286, 1001, 3003, 8008, 19448, 43758, 92378, 184756, 352716, 646646,1144066, 1961256, 3268760, 5311735, 8436285, 13123110, 20030010, 30045015],
    [1,12, 78, 364, 1365, 4368, 12376, 31824, 75582, 167960, 352716, 705432,1352078, 2496144, 4457400, 7726160, 13037895, 21474180,34597290, 54627300],
    [1, 17,27,33,52,73,82,83, 103, 107, 137, 153, 162,217,219,227,237,247,258,268, 271, 282, 283, 302, 303, 313, 358, 383, 432, 437, 443, 447, 502, 548, 557, 558, 647 ],
    [1, 23, 47, 73, 97, 103, 157, 167, 193, 263, 277, 307, 383, 397, 433, 503, 577, 647,673, 683, 727, 743, 863, 887, 937, 967, 983, 1033, 1093, 1103, 1153, 1163, 1223, 1367 ]
]
names=[
    ['THE CUBES: A(N) = N^3.'],
    ['THE SQUARES: A(N) = N^2.'],
    ['FIBONACCI NUMBERS: F(N) = F(N-1) + F(N-2) WITH F(0) = 0 AND F(1) = 1.'],
    ['A(2N) = A(N), A(2N + 1) = A(N + 1) + A(N). REF ELM 2 95 47.'],
    ['A(N) = A(N - 2) + A(N - 5). REF MMAG 41 17 68. '],
    ['QUEENS PROBLEM. REF SL1 47. WE2 238.'],
    ['A(N) = A(N - 2) + A(N - 3). REF JA2 90. MMAG 41 17 68. '],
    ['FIBONACCI NUMBERS + 1. REF JA2 97. '],
    ['BORON TREES. REF CAY 9 451.'],
    ['QUEENS PROBLEM. REF PSALM 10 93 60'],
    ['PERIODIC DIFFERENCES. REF TCPS 2 220 1827'],
    ['POLYTOPES BY NUMBER OF EDGES. REF JCT 7 157 69. '],
    ['SQUARE FILAMENTS. REF PL2 1 337 70'],
    ['A(N) = 2A(N - 1) + A(N - 2). REF AJM 1 187 1878'],
    ['A(N) = A(N - 2) + A(N - 3). REF AMM 15 209 08. JA2 90. FQ 6(3) 68 68.'],
    ['3.2**N - 1 IS PRIME. REF MTAC 23 874 69. '],
    ['A(N) = A(N - 1) + A(N - 3). REF LA3 13. FQ 2 225 64. JA2 91. MMAG 41 15 68.'],
    ['N(N + 1) + 1 IS PRIME. REF CU1 1 245. LIN 3 209 29. LE1 46.'],
    ['(2N)**2 + 1 IS PRIME. REF KR1 1 11.'],
    ['39.2**N + 1 IS PRIME. REF PAMS 9 674 58.'],
    ['ARE TWIN PRIMES. REF LE3 69.'],
    ['NTH FIBONACCI NUMBER + N. REF H02 96.'],
    ['NUMBER OF PARTITIONS OF N. REF RS2 90. R1 122. AS1 836.'],
    ['QUOTIENT OF 3**N / 2**N. REF JIMS 2 40 36. LE1 82.'],
    ['FIBONACCI NUMBERS A(N) = A(N - 1) + A(N - 2). REF HW1 148. REC 11 20 62. H01.'],
    ['2**N + 1. REF BA1.'],
    ['25.4**N + 1 IS PRIME. REF PAMS 9 674 58.'],
    ['A(N) = A(N - 1)**2 - A(N - 2)**2. REF EUR 27 6 64.'],
    ['A(N) = A(N - 2) + A(N - 3) + A(N - 4). REF IDM 8 64 01. FQ 6(3) 68 68.'],
    ['9.2**N + 1 IS PRIME. REF PAMS 9 674 58.'],
    ['33.2**N - 1 IS PRIME. REF MTAC 23 874 69.'],
    ['Α(Ν) = Α(Ν - 1) + Α(Ν - 2) + 1. REF JA2 96.'],
    ['CENTRAL BINOMIAL COEFFICIENTS C(N, N/2). REF RS1. AS1 828.'],
    ['TRIBONACCI NUMBERS A(N) = A(N - 1) + A(N - 2) + A(N - 3). REF FQ 5 211 67.'],
    ['N.2**N - 1 IS PRIME. REF MTAC 23 875 69.'],
    ['57.2**N + 1 IS PRIME. REF PAMS 9 675 58.'],
    ['21.2**N - 1 IS PRIME. REF MTAC 23 874 69.'],
    ['7.4**N + 1 IS PRIME. REF PAMS 9 674 58.'],
    ['ALTERNATING KNOTS. REF TA1 1 345. JL2 343.'],
    ['(2N)**4 + 1 IS PRIME. REF MTAC 21 246 67.'],
    ['SQUARE IS A PALINDROME. REF JRM 3 94 70.'],
    ['A(N) = N(N - 1)A(N - 1)/2 + A(N - 2).'],
    ['A(N) = A(N - 1) + A(N - 2) - 1. REF JA2 97.'],
    ['15.2**N - 1 IS PRIME. REF MTAC 23 874 69.'],
    ['JORDAN-POLYA NUMBERS. REF JCT 5 25 68.'],
    ['SNAKE-IN-THE-BOX PROBLEM. REF AMM 77 63 70.'],
    ['N**4 + 1 IS PRIME. REF MTAC 21 246'],
    ['17.2**N - 1 IS PRIME. REF MTAC 22 421 68.'],
    ['MAXIMUM NUMBER OF PIECES OF A CIRCLE MADE WITH A GIVEN NUMBER OF STRAIGHT CUTS'],
    ['TRIBONACCI NUMBERS A(N) - A(N - 1) + A(N - 2) + A(N - 3). REF FQ 1(3) 71 63, 5 211  67.'],
    ['5.2**N - 1 IS PRIME. REF MTAC 22 421 68.'],
    ['A(N) = A(N - 1) + (N - 1)A(N - 2). REF LU1 1 221. R1 86. MU2 6. DMJ 35 659 68.'],
    ['PERMUTATIONS BY NUMBER OF CYCLES. REF R1 85.'],
    ['PELL NUMBERS A(N) = 2A(N - 1) + A(N - 2). REF FQ 4 373 66.'],
    ['A(N) = A(N - 1) + N.A(N - 2). REF R1 86 (DIVIDED BY 2).'],
    ['A(N) = NA(N - 1) - (N - 1)(N - 2)A(N - 3)/2. REF CAY 9 190. PLMS 17 29 17. EMN 34 1 44.'],
    ['PERMUTATIONS BY NUMBER OF PAIRS. REF DKB 263.'],
    ['PERMUTATIONS WITHOUT 3-SEQUENCES. REF BAMS 51 748 45.'],
    ['A(N) = 4A(N - 1) - A(N - 2). REF NCM 4 167 1878. MMAG 40 78 67. FQ 7 239 69.'],
    ['A(N) = NA(N - 1) + A(N - 2). REF EUR 20 15 57.'],
    ['A(N) = NA(N - 1) + (N - 2)A(N - 2). REF R1 188.'],
    ['A(N) = (2N - 1)A(N - 1) - (N - 1)A(N - 2). REF AJM 2 94 1879. LU1 1 223.'],
    ['A(N) = 2A(N - 1) + 5A(N - 2). REF MQET 1 11 16.'],
    ['A(N) = 4A(N - 1) + A(N - 2). REF TH2 282.'],
    ['A(N) = 6A(N - 1) - A(N - 2). REF NCM 4 166 1878. ANN 30 72 28. AMM 75 683 68.'],
    ['A(N) = 2A(N - 1) + 9A(N - 2). REF MQET 1 11 16.'],
    ['A(N) = 10A(N - 1) - A(N - 2). REF TH2 281.'],
    ['11.2**N - 1 IS PRIME. REF MTAC 22 421 68.'],
    ['FIBONACCI ENTRY POINTS. REF JA2 7. MTAC 20 618 66.'],
    ['LUCAS NUMBERS A(N) = A(N - 1) + A(N - 2). REF HW1 148. H01.'],
    ['Α(2Ν) = Α(2Ν - 1) + Α(2Ν - 2), Α(2Ν + 1) = 2Α(2Ν) + Α(2Ν - 1). REF MQET 1 10 16. ΝΖ1181.'],
    ['A(N) = A(N - 1) + A(N - 2) - 2. REF SMA 20 23 54. R1 233. JCT 7 292 69.'],
    ['(2**P + 1)/3 IS PRIME. REF MMAG 27 157 54.'],
    ['(N**2 + 1)/2 IS PRIME. REF EUL (1) 3 24 17.'],
    ['A(N) = A(N - 1) + A(N - 2) + 1. REF FQ 8 267 70.'],
    ['A(N) = A(N - 1) + A(N - 2) + A(N - 3). REF FQ 1(3) 72 63, 2 260 64.'],
    ['A(N) = A(N - 1) + 2A(N - 2). REF NCM 6 146 1880. EUR 26 12 63.'],
    ['19.2**N - 1 IS PRIME. REF MTAC 22 421 68.'],
    ['TRIANGULAR NUMBERS OR BINOMIAL COEFFICIENTS N(N + 1)/2. REF DI2 2 1. RS1.'],
    ['WALKS ON A HONEYCOMB. REF JMP 2 61 61.(triangular numbers)'],
    ['A(N) = A(N - 1) + N.A(N - 2).'],
    ['9.2**N - 1 IS PRIME. REF MTAC 23 874 69.'],
    ['5.2**N + 1 IS PRIME. REF PAMS 9 674 58.'],
    ['CENTRAL POLYGONAL NUMBERS N(N - 1) + 1. REF H03 22. H02 87.'],
    ['PRIMES OF FORM N(N + 1) + 1. REF LIN 3 209 29. LE1 46.'],
    ['A(N) = 2A(N - 1) + A(N - 2). REF MQET 1 9 16. AMM 56 445 49.'],
    ['INCREASING GAPS BETWEEN PRIMES. REF MTAC 21 485 67.'],
    ['13.2**N - 1 IS PRIME. REF MTAC 22 421 68.'],
    ['A(N) = N.A(N - 1) + (-1)**N.'],
    ['PERMUTATIONS OF ORDER EXACTLY 2. REF CJM 7 159 55.'],
    ['(N(N + 1) + 1)/13 IS PRIME. REF CU1 1 251.'],
    ['A(N + 1) = NA(N) + A(N - 1). REF EUR 22 15 59.'],
    ['A(N) = 4A(N - 1) - A(N - 2). REF EUL (1) 1 375 11. MMAG 40 78 67.'],
    ['A(N) = NA(N - 1) + (N - 1)A(N - 2). REF R1 188. DKB 263. MAG 52 381 68.'],
    ['A(N) = NA(N - 1) + (N - 3)A(N - 2). REF R1 188.'],
    ['17.2**N + 1 IS PRIME. REF PAMS 9 674 58.'],
    ['DISCORDANT PERMUTATIONS. REF SMA 19 118 53.'],
    ['A(N) - 20A(N - 1) - A(N - 2). REF NCM 4 167 1878. MTS 65(4, SUPPLEMENT) 8 56.'],
    ['(N(N + 1) + 1)/3 IS PRIME. REF CU1 1 248.'],
    ['TETRAHEDRAL NUMBERS OR BINOMIAL COEFFICIENTS C(N, 3). REF DI2 2 4. RS1. '],
    ['1**N + 2**N + ··· + 4**N. REF AS1 813.'],
    ['A(2N) = A(2N - 1) + 3A(2N - 2), A(2N + 1) = 2A(2N) + 3A(2N - 1). REF MQET 1 12 16.'],
    ['EULERIAN NUMBERS 2**N - N - 1. REF R1 215. DB1 151.'],
    ['POPULATION OF U**2 + V**2 + W**2. REF PNISI 13 37 47.'],
    ['A(N) = 4A(N - 1) - A(N - 2). REF NCM 4 167 1878. AMM 24 82 17. MMAG 40 78 67.'],
    ['(N(N + 1) + 1)/21 IS PRIME. REF CU1 1 252.'],
    ['2N(N + 1)(2N + 1)/3. REF MTAC 4 23 50.'],
    ['A(N) - NA(N - 1) + (N - 4)A(N - 2). REF R1 188.'],
    ['A(N) - 8A(N - 1) - A(N - 2). REF NCM 4 167 1878.'],
    ['FIGURATE NUMBERS OR BINOMIAL COEFFICIENTS C(N, 4). REF DI2 2 7. RS1. BE3 196.'],
    ['DISCORDANT PERMUTATIONS. REF SMA 20 23 54.'],
    ['PERMUTATIONS BY LENGTH OF RUNS. REF DKB 260.'],
    ['A(N) = 4A(N - 1) - A(N - 2). REF EUL (1) 1 375 11. MM AG 40 78 6'],
    ['A(N) = NA(N - 1) + (N - 5)A(N - 2). REF R1 188'],
    ['A(N) - (2N + 1)A(N - 1) + A(N - 2). REF CJM 8 308 56.'],
    ['A(N) = 10A(N - 1) - A(N - 2). REF EUL (1) 1 374 11. TH2 281.'],
    ['BINOMIAL COEFFICIENTS. REF TH1 164. FMR 1 55'],
    ['A(N) = 4A(N - 1) - A(N - 2). REF MTAC 24 180 70'],
    ['DENOMINATORS OF BERNOULLI NUMBERS. REF DA2 2 208.'],
    ['PERMUTATIONS OF ORDER EXACTLY 4. REF CJM 7 159 55.'],
    ['A(N) = 6A(N - 1) - A(N - 2). REF DI2 2 10. MAG 47 237 63. BE3 193. FQ 9 95'],
    ['(N(N + 1) + 1)/19 IS PRIME. REF CU1 1 252.'],
    ['PRIMES WITH 10 AS A PRIMITIVE ROOT. REF KR1 1 61.'],
    ['2 IS A QUADRATIC RESIDUE MODULO P. REF KR1 1 59.'],
    ['PRIMES WITH 3 AS SMALLEST PRIMITIVE ROOT. REF KR1 1 57. AS1 864.'],
    ['HEPTAGONAL NUMBERS (5N^2 - 3N) / 2'],
    ['FIGURATE NUMBERS OR BINOMIAL COEFFICIENTS C(N, 6). REF DI2 2 7. RS1. BE3 196.'],
    ['A(N) = 6A(N - 1) - A(N - 2). REF AMM 4 25 1897. IDM 10 236 03. ANN 36 644 3'],
    ['FIGURATE NUMBERS OR BINOMIAL COEFFICIENTS C(N, 7). REF DI2 2 7. RS1. BE3 196.'],
    ['A(N) = 8A(N - 1) - A(N - 2). REF NCM 4 167 1878'],
    ['A(N) = 14A(N - 1) - A(N - 2) - 6. REF AMM 53 465 46.'],
    ['A(N) = 16A(N - 1) - A(N - 2). REF NCM 4 167 1878. TH2 281.'],
    ['FIGURATE NUMBERS OR BINOMIAL COEFFICIENTS C(N, 8). REF DI2 2 7. RS1. BE3 196.'],
    ['FIGURATE NUMBERS OR BINOMIAL COEFFICIENTS C(N, 9). REF DI2 2 7. RS1. BE3 196.'],
    ['FIGURATE NUMBERS OR BINOMIAL COEFFICIENTS C(N, 10). REF DI2 2 7. RS1. BE3 196.'],
    ['FIGURATE NUMBERS OR BINOMIAL COEFFICIENTS C(N, 11). REF DI2 2 7. RS1. BE3 196.'],
    ['NOT THE SUM OF 4 TETRAHEDRALS. REF MTAC 12 142 58.'],
    ['PRIMES WITH 5 AS SMALLEST PRIMITIVE ROOT. REF KR1 1 57. AS1 864.']
]


@app.route("/search", methods=["GET"])
def search():
    query = request.args.get("q", "").strip()

    # If input looks like numbers → parse as sequence
    if any(c.isdigit() for c in query):
        try:
            if query.startswith("[") and query.endswith("]"):
                user_seq = json.loads(query)
            else:
                user_seq = [int(x) for x in query.split(",") if x]
        except Exception:
            return jsonify({"error": "Invalid numeric input"}), 400

        for i, seq in enumerate(algorithms):
            for j in range(len(seq) - len(user_seq) + 1):
                if seq[j:j+len(user_seq)] == user_seq:
                    return jsonify({"sequence": seq, "name": names[i]})

        return jsonify({"error": "Not found"})

    # Otherwise treat as name search
    else:
        for i, name in enumerate(names):
            if query.lower() in name[0].lower():
                return jsonify({"sequence": algorithms[i], "name": names[i]})

        return jsonify({"error": "Name not found"})



